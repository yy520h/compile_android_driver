name: 可靠的安卓内核下载器

on:
  workflow_dispatch:

jobs:
  fetch_kernel:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - { android: 11, kernel: "5.4", mirror: "tsinghua" }
          - { android: 12, kernel: "5.4", mirror: "tsinghua" }
          - { android: 13, kernel: "5.10", mirror: "ustc" }
          - { android: 14, kernel: "5.15", mirror: "tsinghua" }
          - { android: 14, kernel: "6.1", mirror: "ustc" }
          - { android: 15, kernel: "6.1", mirror: "tsinghua" }

    steps:
      # 关键修复：多镜像源自动切换
      - name: 配置镜像源
        id: mirror_config
        run: |
          case "${{ matrix.mirror }}" in
            "tsinghua")
              REPO_URL="https://mirrors.tuna.tsinghua.edu.cn/git/kernel/manifest"
              MIRROR_NAME="清华大学开源镜像站"
              ;;
            "ustc")
              REPO_URL="https://mirrors.ustc.edu.cn/aosp-kernel/manifest"
              MIRROR_NAME="中科大开源镜像站"
              ;;
          esac
          
          echo "REPO_URL=$REPO_URL" >> $GITHUB_ENV
          echo "MIRROR_NAME=$MIRROR_NAME" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=android${{ matrix.android }}-kernel${{ matrix.kernel }}.zip" >> $GITHUB_ENV
          
          # 设置全局git替换规则
          git config --global url."https://mirrors.tuna.tsinghua.edu.cn/git".insteadOf https://android.googlesource.com
          git config --global url."https://mirrors.tuna.tsinghua.edu.cn/git".insteadOf git://android.googlesource.com

      - name: 安装必要工具
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl git python3 python3-pip p7zip-full
          sudo pip3 install -U repo

      - name: 下载Repo工具
        run: |
          # 从清华镜像下载Repo
          curl -s https://mirrors.tuna.tsinghua.edu.cn/git/git-repo -o repo
          chmod a+x repo

      - name: 初始化工作区
        run: |
          WORK_DIR="workdir_${{ matrix.android }}_${{ matrix.kernel }}"
          mkdir -p "$WORK_DIR"
          cd "$WORK_DIR"
          echo "WORK_DIR=$(pwd)" >> $GITHUB_ENV

      - name: 仓库初始化 (${{ env.MIRROR_NAME }})
        run: |
          cd ${{ env.WORK_DIR }}
          # 动态分支处理
          BRANCH_OPTIONS=(
            "common-android${{ matrix.android }}-${{ matrix.kernel }}"
            "android${{ matrix.android }}-${{ matrix.kernel }}"
          )
          
          # 特殊版本处理
          if [ ${{ matrix.android }} -ge 14 ]; then
            BRANCH_OPTIONS+=("android-mainline-${{ matrix.kernel }}")
          fi
          
          # 依次尝试可能的有效分支
          for BRANCH in "${BRANCH_OPTIONS[@]}"; do
            echo "尝试初始化分支: $BRANCH"
            if ../repo init -u ${{ env.REPO_URL }} -b $BRANCH; then
              echo "分支 $BRANCH 初始化成功"
              echo "BRANCH=$BRANCH" >> $GITHUB_ENV
              exit 0
            fi
            echo "分支 $BRANCH 初始化失败"
          done
          
          echo "::error::所有分支尝试均失败"
          exit 100

      - name: 同步源代码
        run: |
          cd ${{ env.WORK_DIR }}
          # 重试机制（3次尝试）
          for i in {1..3}; do
            echo "同步尝试 $i/3"
            if ../repo sync -c -j$(nproc) --no-tags --optimized-fetch --force-sync; then
              echo "同步成功"
              exit 0
            fi
            echo "同步失败，等待10秒后重试..."
            sleep 10
          done
          
          echo "::error::同步失败超过3次"
          exit 100

      - name: 压缩源代码
        run: |
          cd ${{ env.WORK_DIR }}
          7z a -r -mx=9 ${{ env.ARCHIVE_NAME }} .
          echo "ARCHIVE_PATH=$(pwd)/${{ env.ARCHIVE_NAME }}" >> $GITHUB_ENV

      - name: 上传结果
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: ${{ env.ARCHIVE_PATH }}
          retention-days: 7

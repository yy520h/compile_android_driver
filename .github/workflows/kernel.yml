name: 批量获取Google Android内核

on:
  workflow_dispatch:
  
jobs:
  fetch_kernels:
    name: Fetch and Compress Kernel Sources
    runs-on: ubuntu-latest
    timeout-minutes: 240
    
    strategy:
      # 关键修复1：禁止任务间依赖
      fail-fast: false
      matrix:
        include:
          - { android: 11, kernel: 5.4 }
          - { android: 12, kernel: 5.4 }
          - { android: 13, kernel: 5.10 }
          - { android: 14, kernel: 5.15 }
          - { android: 14, kernel: 6.1 }
          - { android: 15, kernel: 6.1 }  # 特殊处理
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        
      - name: Setup directory
        run: |
          mkdir -p android-kernel
          cd android-kernel
          mkdir ${ANDROID_KERNEL_DIR}
          echo "WORKING_DIR=$(pwd)/${ANDROID_KERNEL_DIR}" >> $GITHUB_ENV
        env:
          ANDROID_KERNEL_DIR: android${{ matrix.android }}-kernel${{ matrix.kernel }}
      
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-pip p7zip-full pigz git-lfs
          sudo pip3 install -U repo
          git config --global user.email "3025009453@qq.com"
          git config --global user.name "yy520h"
      
      # 关键修复2：安卓15特殊处理
      - name: Determine branch name
        id: branch_detector
        run: |
          if [ ${{ matrix.android }} -eq 15 ] && [ "${{ matrix.kernel }}" == "6.1" ]; then
            echo "MANIFEST_BRANCH=android-mainline-6.1" >> $GITHUB_ENV
          else
            echo "MANIFEST_BRANCH=common-android${{ matrix.android }}-${{ matrix.kernel }}" >> $GITHUB_ENV
          fi
          echo "使用分支: $MANIFEST_BRANCH"
      
      - name: Initialize repo
        run: |
          cd ${{ env.WORKING_DIR }}
          repo init -u https://android.googlesource.com/kernel/manifest -b ${{ env.MANIFEST_BRANCH }}
      
      # 关键修复3：同步重试机制
      - name: Sync source code
        continue-on-error: true  # 允许单个任务继续
        run: |
          cd ${{ env.WORKING_DIR }}
          for i in {1..3}; do
            repo sync -j$(nproc) -c --no-tags --optimized-fetch --force-sync && break
            echo "同步失败，尝试 $i/3"
            sleep $((i * 10))
          done
        timeout-minutes: 45
      
      - name: Compress source to ZIP
        run: |
          cd ${{ env.WORKING_DIR }}
          
          # 检查是否同步成功
          if [ ! -d .repo ]; then
            echo "::warning::同步失败！创建空标记文件"
            touch sync_failed
            echo "ARCHIVE_NAME=${{ env.ANDROID_KERNEL_DIR }}_SYNC_FAILED.zip" >> $GITHUB_ENV
            7z a ../${{ env.ARCHIVE_NAME }} sync_failed
          else
            echo "同步成功，开始压缩..."
            7z a -mx=8 -mmt=on ../${{ env.ANDROID_KERNEL_DIR }}.zip *
            echo "ARCHIVE_NAME=${{ env.ANDROID_KERNEL_DIR }}.zip" >> $GITHUB_ENV
          fi
          echo "ARCHIVE_PATH=$(pwd)/../${{ env.ARCHIVE_NAME }}" >> $GITHUB_ENV
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: ${{ env.ARCHIVE_PATH }}
          retention-days: 7
